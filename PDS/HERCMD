***********************************************************************
* PROGRAM: HERCMD                                                     *
* AUTHOR: PHILIPPE LEITE                                              *
* DATE: 31/05/2006                                                    *
* DESCRIPTION:                                                        *
*    TSO COMMAND PROCESSOR TO ISSUE HERCULES COMMANDS THROUGH         *
*    DIAGNOSE INTRUCTION (FUNCTION CODE X'008').                      *
*    THE HERCULES PARAMETER DIAG8CMD MUST BE ENABLED.                 *
*                                                                     *
* EXAMPLE:  TSO HERCMD ATTACH 0A90 3390 DISK.0A90                     *
*                                                                     *
* NOTES:                                                              *
*                                                                     *
*       1) This program must be authorized in SYS1.PARMLIB(IKJTSO00)  *
*       2) Linkage editor parameters: RENT,REUS,AC(1)                 *
*                                                                     *
***********************************************************************
HERCMD   CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         USING HERCMD,R12
         STM   R14,R12,12(R13)    Save registers
         LR    R12,R15            Base register
         LR    R11,R13            Save SArea address
         LR    R7,R1              Save PARM Address
         MODESET MODE=SUP,KEY=ZERO Change to supervisor mode, key zero
         GETMAIN RU,LV=WRKLEN,SP=245,BNDRY=PAGE  Get SQA Fixed area
         LR    R10,R1             Copy Getmained address
         USING WORKAREA,R10
         LA    R13,SAVEAREA
         ST    R13,8(R11)
         ST    R11,4(R13)
*
         L     R2,4(R7)           SAVE UPT PTR FOR PUTLINE
         L     R3,12(R7)          SAVE ECT PTR  ..   ..
         LA    R4,TSOECB          SAVE ECB PTR  ..   ..
         LA    R5,IOPB            SAVE IOPB PTR ..   ..
         STM   R2,R5,IOPL
*
* Command Buffer Layout:
*
*  +--------+--------+---------------------+
*  | Length | offset |  Text               |
*  +--------+--------+---------------------+
*   2 bytes  2 bytes
*  |______________ length _________________|
*
*
         L     R2,0(R7)           Load Command buffer address from CPPL
         LH    R4,0(R2)           Load length in R4
         LA    R6,10
         SR    R4,R6              subtract 10 from length
         LTR   R4,R4              Test ZERO
         BZ    FIM1               Yes, go to end
         BCTR  R4,0               subtract 1 from length
         LA    R2,11(R2)          Add  11 to find command start
         BCTR  R4,0               subtract 1 to Execute
         EX    R4,MOVEBUFF        Move command string
         LA    R4,1(R4)           add 1 to correct length
         O     R4,=X'40000000'    Turn on RESPONSE flag
*ERR     LRA   R2,0(R2)           Load Command buffer REAL address
         LRA   R2,BUFFER          Load Comm. buffer Fixed REAL address
         LRA   R3,RESULT          Load Response buffer REAL address
         L     R5,=A(MAXRLEN)     Load MAX Response Length
*  DIAG INSTRUCTION (NO MNEMONIC AVAILABLE IN HLA)
         DC    X'83'              OPCODE
         DC    X'24'              Parameters in Regs R2, R3, R4 and R5
         DC    X'0008'            DIAG FUNCTION CODE
         BC    8,CONT0            Test PSW CC to check if
*                                  resplen>maxrlen (vm.c)
         XC    TSOECB,TSOECB
         PUTLINE OUTPUT=(MSG1L,SINGLE,DATA),MF=(E,IOPL)
CONT0    EQU   *
*
*  Display command response
*
         LTR   R5,R5              Check if response exists
         BZ    FIM2               No, go to end
         LA    R6,RESULT          Load response buffer address
         LR    R2,R6              Copy to R2
LOOP1    EQU   *
         CLI   0(R6),X'00'        Check if end of buffer
         BE    FIM                Yes, go to end
         CLI   0(R6),X'25'        Check if end of line
         BNE   CONT1              No, go to next byte
         LR    R8,R6              Copy to R8
         SR    R8,R2              Compute line length
         C     R8,=F'256'         Check if line length > 256
         BNH   CONT256            NO, continue
         LA    R8,256             Load max line length
CONT256  EQU   *
         LA    R4,4
         AR    R4,R8              Add 4 to length - PUTLINE
         STH   R4,LENGTH          Save in PUTLINE buffer length
         BCTR  R8,0               Subtract 1 to EXECUTE
         EX    R8,MOVEBUFF        Move line to PUTLINE buffer
         XC    TSOECB,TSOECB      Clear ECB
         PUTLINE OUTPUT=(LENGTH,SINGLE,DATA),MF=(E,IOPL)
         LA    R6,1(R6)           Next byte
         LR    R2,R6              Restablish base address for next line
         B     LOOP1              Go back to LOOP
CONT1    EQU   *
         LA    R6,1(R6)           Next byte
         B     LOOP1              Go back to LOOP
FIM      EQU   *
         L     R13,SAVEAREA+4     Load SArea address
         FREEMAIN RU,LV=WRKLEN,SP=245,A=(R10)
         LM    R14,R12,12(R13)    Restore registers
         SR    R15,R15            Reset R15
         BR    R14                Go back to OS
FIM1     EQU   *
         XC    TSOECB,TSOECB      Clear ECB
         PUTLINE OUTPUT=(MSG2L,SINGLE,DATA),MF=(E,IOPL)
         B     FIM
FIM2     EQU   *
         XC    TSOECB,TSOECB      Clear ECB
         PUTLINE OUTPUT=(MSG3L,SINGLE,DATA),MF=(E,IOPL)
         B     FIM
MOVEBUFF MVC   BUFFER(0),0(R2)
MSG1L    DC    Y(L'MSG1+4),Y(0)
MSG1     DC    C'*** Response length is higher than local buffer ***'
MSG2L    DC    Y(L'MSG2+4),Y(0)
MSG2     DC    C'*** No parameters passed ***'
MSG3L    DC    Y(L'MSG3+4),Y(0)
MSG3     DC    C'*** No command result ***'
         LTORG
* Work Area
WORKAREA DSECT
SAVEAREA DS    9D
IOPB     PUTLINE MF=L
TSOECB   DS    F
IOPL     DS    4F
LENGTH   DS    H
         DS    H
BUFFER   DS    CL256              General buffer
MAXRLEN  EQU   (8192-(*-WORKAREA))
RESULT   DS    (MAXRLEN)C         Response buffer
WRKLEN   EQU   *-WORKAREA         Length
